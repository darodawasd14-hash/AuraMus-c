{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the Aura application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "displayName": {
          "type": "string",
          "description": "User's name."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "arePlaylistsPublic": {
          "type": "boolean",
          "description": "Determines if the user's playlists are visible to others.",
          "default": true
        }
      },
      "required": [
        "id"
      ]
    },
    "Playlist": {
      "title": "Playlist",
      "description": "Represents a user-created playlist.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "createdAt": {
          "type": "object"
        },
        "songCount": {
          "type": "number",
          "description": "The number of songs in the playlist."
        }
      },
      "required": ["name", "userId", "createdAt"]
    },
    "Song": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Song",
      "type": "object",
      "description": "Represents a song in the user's music library.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the song."
        },
        "title": {
          "type": "string",
          "description": "Title of the song."
        },
        "url": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "videoId": {
          "type": "string"
        },
        "timestamp": {
          "type": "object"
        }
      },
      "required": [
        "title",
        "url",
        "type",
        "timestamp"
      ]
    },
    "Message": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Message",
      "type": "object",
      "description": "Represents a single chat message for a specific song.",
      "properties": {
        "id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "sender": {
          "type": "object",
          "properties": {
            "uid": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "required": ["uid", "displayName"]
        },
        "timestamp": {
          "type": "object"
        }
      },
      "required": ["text", "sender", "timestamp"]
    },
     "Follow": {
        "title": "Follow",
        "description": "Represents a follow relationship between two users.",
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "The UID of the user who is following or being followed."
          }
        },
        "required": ["uid"]
      },
      "Chat": {
        "title": "Chat",
        "description": "Represents a private chat session between users. IMPORTANT: This collection should only be queryable with a 'where' clause on 'participantIds' using 'array-contains'. Listing the entire collection is a security risk and should be disallowed.",
        "type": "object",
        "properties": {
          "participantIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array containing the UIDs of all participants in the chat."
          },
          "lastMessage": {
            "type": "string"
          },
          "lastMessageTimestamp": {
            "type": "object"
          }
        },
        "required": ["participantIds"]
      }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "/users/{userId}": {
      "schema": {
        "$ref": "#/entities/User"
      },
      "description": "NİYET: Herkese Açık Profil Okuma. KURAL (OKU): Oturum açan (isSignedIn) HERKES başkalarının profilini okuyabilir (get). KURAL (YAZ): Sadece profilin SAHİBİ (isOwner) kendi profilini yazabilir (create, update, delete)."
    },
    "/users/{userId}/playlists/{playlistId}": {
      "schema": {
        "$ref": "#/entities/Playlist"
      },
      "description": "NİYET: Herkese Açık Çalma Listesi Okuma. KURAL (OKU): Oturum açan HERKES başkalarının çalma listelerini okuyabilir (get, list). KURAL (YAZMA): Sadece SAHİBİ (üst belgenin sahibi) kendi çalma listelerini yazabilir."
    },
    "/users/{userId}/playlists/{playlistId}/songs/{songId}": {
        "schema": {
            "$ref": "#/entities/Song"
        },
        "description": "NİYET: Sadece Sahip Okur/Yazar. KURAL: Bu koleksiyondaki şarkıları SADECE ana çalma listesinin SAHİBİ ({userId}) okuyabilir ve yazabilir."
    },
    "/songs/{songId}": {
      "schema": {
        "$ref": "#/entities/Song"
      },
      "description": "NİYET: Küresel Şarkı Kataloğu. KURAL: Oturum açan TÜM kullanıcılar bu koleksiyonu okuyabilir ve bu koleksiyona yazabilir. Bu, şarkıların keşfedilmesini sağlar."
    },
    "/songs/{songId}/messages/{messageId}": {
      "schema": {
        "$ref": "#/entities/Message"
      },
      "description": "NİYET: Herkese Açık Şarkı Sohbeti. KURAL: Oturum açan TÜM kullanıcılar belirli bir şarkı hakkındaki sohbet mesajlarını okuyabilir ve bu sohbete yeni mesajlar yazabilir."
    },
     "/users/{userId}/followers/{followerId}": {
        "schema": {
          "$ref": "#/entities/Follow"
        },
        "description": "NİYET: Herkese Açık Takipçi Listesi Okuma ve Sosyal Yazma. KURAL (OKU): Oturum açan HERKES başkalarının takipçilerini okuyabilir (get, list). KURAL (YAZ): Takip etme işlemini (create) sadece takip eden kişi ({followerId}) kendi adına yapabilir. Takibi bırakma/engelleme (delete) işlemini ise ya profilin sahibi ({userId}) ya da takipçinin kendisi ({followerId}) yapabilir."
      },
      "/users/{userId}/following/{followingId}": {
        "schema": {
          "$ref": "#/entities/Follow"
        },
        "description": "NİYET: Herkese Açık Takip Edilen Listesi Okuma. KURAL (OKU): Oturum açan HERKES başkalarının takip edilen listesini okuyabilir (get, list). KURAL (YAZ): Sadece SAHİBİ ({userId}) kendi 'takip edilen' listesini yönetebilir (create, delete)."
      },
      "/chats/{chatId}": {
        "schema": {
          "$ref": "#/entities/Chat"
        },
        "description": "MİMARİDEKİ ANAHTAR KURAL (GÜVENLİ LİSTELEME): 'list' işlemine sadece şu koşulda izin ver: İstemci, 'participantIds' alanı üzerinde 'array-contains' ile KENDİ uid'sini arayan bir 'where' sorgusu kullanıyor. Bu, `collection(firestore, 'chats')` gibi GÜVENSİZ sorguları engeller."
      },
      "/chats/{chatId}/messages/{messageId}": {
        "schema": {
          "$ref": "#/entities/Message"
        },
        "description": "NİYET: Özel Mesaj Okuma/Yazma. KURAL: Sadece sohbetin katılımcıları mesajları okuyabilir (get, list). Mesaj oluşturma (create) sadece katılımcılar tarafından ve kendi adlarına yapılabilir. Güncelleme/Silme (update, delete) sadece mesajın sahibi tarafından yapılabilir."
      }
  }
}
    