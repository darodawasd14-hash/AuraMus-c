/**
 * @file Firestore Security Rules for Aura Music App
 * @description This ruleset enforces a user-ownership model for user profiles and songs, 
 * allowing users to read their own data and create, update, and delete their own songs.
 * Chat messages for songs are publicly readable, but only authenticated users can send them.
 * The list of live listeners for a song is publicly readable and writable by any authenticated user.
 *
 * @data_structure
 * - /users/{userId}: User profile data, owned by the user.
 * - /users/{userId}/songs/{songId}: Songs owned by the user.
 * - /songs/{songId}/messages/{messageId}: Public chat messages for a song.
 * - /songs/{songId}/live_listeners/{userId}: List of users currently listening to a song.
 *
 * @key_security_decisions
 * - Users can only read, create, update, and delete their own profile data and songs.
 * - Listing all users is disallowed for privacy reasons.
 * - Chat messages are publicly readable but require authentication to create.
 * - Live listener lists are publicly readable and writable for authenticated users.
 *
 * @denormalization_for_authorization
 * - User IDs are used in path segments to enforce ownership, avoiding the need for `get()` calls.
 *
 * @structural_segregation
 * - Private user data (profiles, songs) is stored under /users/{userId}, while public chat messages and live listener lists are stored under /songs/{songId}.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Secure user profiles. Only the user can read, create, update, or delete their own profile.
     * @path /artifacts/Aura/users/{userId}
     * @allow (get, create, update, delete) User with ID 'user123' can access /artifacts/Aura/users/user123.
     * @deny (get, create, update, delete) User with ID 'user456' cannot access /artifacts/Aura/users/user123.
     * @principle Enforces document ownership for all operations.
     */
    match /artifacts/Aura/users/{userId} {
      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) && resource.data.id == userId;
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Secure user-specific songs. Only the user can read, create, update, or delete their own songs.
     * @path /artifacts/Aura/users/{userId}/songs/{songId}
     * @allow (get, create, update, delete) User with ID 'user123' can access /artifacts/Aura/users/user123/songs/song1.
     * @deny (get, create, update, delete) User with ID 'user456' cannot access /artifacts/Aura/users/user123/songs/song1.
     * @principle Enforces document ownership for all operations within the user's data tree.
     */
    match /artifacts/Aura/users/{userId}/songs/{songId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Secure chat messages for songs. Any authenticated user can read messages, and any authenticated user can create messages.
     * @path /artifacts/Aura/songs/{songId}/messages/{messageId}
     * @allow (get, list) Any user can read chat messages.
     * @allow (create) Authenticated user can create a chat message.
     * @deny (update, delete) No one can update or delete chat messages.
     * @principle Allows public reads, restricts writes to authenticated users.
     */
    match /artifacts/Aura/songs/{songId}/messages/{messageId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn();
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Secure live listener lists for songs. Any authenticated user can read and write to this collection.
     * @path /artifacts/Aura/songs/{songId}/live_listeners/{userId}
     * @allow (get, list, create, update, delete) Any authenticated user can read and write the list of live listeners.
     * @principle Allows public reads and authenticated writes to the list of live listeners.
     */
    match /artifacts/Aura/songs/{songId}/live_listeners/{userId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }
  }

  // Helper Functions
  function isSignedIn() {
    return request.auth != null;
  }

  function isOwner(userId) {
    return request.auth.uid == userId;
  }

  function isExistingOwner(userId) {
    return isSignedIn() && isOwner(userId) && resource != null;
  }
}