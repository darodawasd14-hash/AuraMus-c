rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Checks if the request is authenticated.
     */
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Checks if the request is made by the owner of the user ID.
     */
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    /**
     * @description Checks if the request is made by the existing owner of the user ID.
     */
    function isExistingOwner(userId) {
      return isSignedIn() && request.auth.uid == userId && exists(resource.path);
    }

    /**
     * @description Rules for user profiles.
     * @path /artifacts/Aura/users/{userId}
     * @allow (create) User with ID 'user123' can create their profile.
     * @allow (get) User with ID 'user123' can get their profile.
     * @allow (update) User with ID 'user123' can update their profile.
     * @allow (delete) User with ID 'user123' can delete their profile.
     * @deny (create) User with ID 'user123' cannot create a profile with a different ID.
     * @deny (get) User with ID 'user456' cannot get the profile of 'user123'.
     * @deny (update) User with ID 'user456' cannot update the profile of 'user123'.
     * @deny (delete) User with ID 'user456' cannot delete the profile of 'user123'.
     * @principle Enforces document ownership for writes.
     */
    match /artifacts/Aura/users/{userId} {
      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Rules for songs within a user's profile.
     * @path /artifacts/Aura/users/{userId}/songs/{songId}
     * @allow (create) User with ID 'user123' can create a song in their profile.
     * @allow (get) User with ID 'user123' can get a song in their profile.
     * @allow (update) User with ID 'user123' can update a song in their profile.
     * @allow (delete) User with ID 'user123' can delete a song in their profile.
     * @deny (create) User with ID 'user456' cannot create a song in 'user123' profile.
     * @deny (get) User with ID 'user456' cannot get a song in 'user123' profile.
     * @deny (update) User with ID 'user456' cannot update a song in 'user123' profile.
     * @deny (delete) User with ID 'user456' cannot delete a song in 'user123' profile.
     * @principle Enforces document ownership for writes.
     */
    match /artifacts/Aura/users/{userId}/songs/{songId} {
      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }
  }
}